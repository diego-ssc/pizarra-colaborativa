services:
  frontend:
    build:
      context: ./app/frontend
      target: dev
    ports:
      - 8080:5173
    depends_on:
      - backend
    pull_policy: build
    env_file:
      - .env.develop.local/frontend.env
    develop:
      watch:
        - action: sync
          path: ./app/frontend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./app/frontend/package.json
  backend:
    build:
      context: ./app/backend
      target: dev
    ports:
      - 3000:3000
    depends_on:
      - db
      - minio
    pull_policy: build
    env_file:
      - .env.develop.local/db.env
      - .env.develop.local/minio.env
    develop:
      watch:
        - action: sync
          path: ./app/backend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: ./app/backend/package.json
  y-redis-server:
    build:
      context: ./app/y-redis
      target: server
    ports:
      - 3002:3002
    depends_on:
      - db
      - redis
      - backend
    pull_policy: build
    env_file:
      - .env.develop.local/y-redis.env
  y-redis-worker:
    build:
      context: ./app/y-redis
      target: worker
    depends_on:
      - db
      - redis
      - backend
    pull_policy: build
    env_file:
      - .env.develop.local/y-redis.env

  redis:
    image: redis:7.2
    ports:
      - 6379:6379
  minio:
    image: bitnami/minio:2024.5.10
    volumes:
      - miniodata:/data
    ports:
      - 9000:9000
      - 9001:9001
    env_file:
      - .env.develop.local/minio.env
  db:
    image: postgres:16-alpine
    restart: always
    shm_size: 128mb
    ports:
      - 5432:5432
    volumes:
      - dbdata:/var/lib/postgresql/data 
    env_file:
      - .env.develop.local/db.env
volumes:
  dbdata:
  miniodata:
